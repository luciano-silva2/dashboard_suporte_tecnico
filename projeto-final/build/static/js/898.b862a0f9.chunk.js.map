{"version":3,"file":"static/js/898.b862a0f9.chunk.js","mappings":"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","sources":["Pages/Tickets/CriarTicket.jsx","Pages/Tickets/ticketsUtils.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, addDoc, Timestamp } from 'firebase/firestore';\nimport { auth, db } from '../../Firebase/firebase';\nimport Select from 'react-select';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { prioridades, statusOptions, tecnicos } from './ticketsUtils';\n\nexport default function CriarTicket() {\n  const [nome, setNome] = useState('Antony');\n  const [email, setEmail] = useState('');\n  const [problema, setProblema] = useState('');\n  const [prioridade, setPrioridade] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [tecnico, setTecnico] = useState(null);\n  const [dataCriacao, setDataCriacao] = useState(new Date());\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const user = auth.currentUser;\n    if (user) {\n      setNome(user.displayName || \"Usuário sem nome\");\n      setEmail(user.email || \"\");\n    }\n  }, []);\n\n\n\n\n  const salvarDados = async (e) => {\n    e.preventDefault();\n\n    if (!email || !prioridade || !status || !tecnico) {\n      alert(\"Preencha todos os campos obrigatórios\");\n      return;\n    }\n\n    try {\n      await addDoc(collection(db, 'tickets'), {\n        nome,\n        email,\n        problema,\n        prioridade: prioridade.value,\n        status: status.value,\n        tecnico: tecnico.value,\n        data: Timestamp.fromDate(dataCriacao),\n      });\n\n      alert(\"Ticket criado com sucesso\");\n      navigate('/tickets');\n    } catch (erro) {\n      console.error(\"Erro ao criar ticket:\", erro);\n    }\n    console.log(auth)\n  };\n\n  return (\n    <form onSubmit={salvarDados} className=\"border rounded p-4 shadow-sm bg-white mb-4\">\n      <h5 className=\"mb-3\">Criar Novo Ticket</h5>\n      <div className=\"row g-3\">\n        <div className=\"col-md-4\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={nome}\n            onChange={(e) => setNome(e.target.value)}\n            placeholder=\"Digite seu nome\"\n            required\n            readOnly={true}\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Digite seu e-mail\"\n            required\n            readOnly={true}\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={problema}\n            onChange={(e) => setProblema(e.target.value)}\n            placeholder=\"Descreva o problema\"\n            required\n            \n          />\n        </div>\n      </div>\n\n      <div className=\"row g-3 mt-3\">\n        <div className=\"col-md-4\">\n          <Select\n            value={prioridade}\n            onChange={setPrioridade}\n            options={prioridades}\n            placeholder=\"Prioridade\"\n            classNamePrefix=\"react-select\"\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <Select\n            value={status}\n            onChange={setStatus}\n            options={statusOptions}\n            placeholder=\"Status\"\n            classNamePrefix=\"react-select\"\n          />\n        </div>\n        <div className=\"col-md-4\">\n          <Select\n            value={tecnico}\n            onChange={setTecnico}\n            options={tecnicos}\n            placeholder=\"Técnico responsável\"\n            classNamePrefix=\"react-select\"\n          />\n        </div>\n      </div>\n\n      <div className=\"row g-3 mt-3\">\n        <div className=\"col-md-4\">\n          <DatePicker\n            selected={dataCriacao}\n            onChange={setDataCriacao}\n            dateFormat=\"dd/MM/yyyy\"\n            placeholderText=\"Data do ticket\"\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n\n      <div className=\"d-flex justify-content-end mt-4\">\n        <button type=\"submit\" className=\"btn btn-primary px-4\">\n          Criar Ticket\n        </button>\n      </div>\n    </form>\n  );\n}\n","import jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { saveAs } from 'file-saver';\n\nexport const prioridades = [\n  { value: 'urgente', label: 'Urgente' },\n  { value: 'alta', label: 'Alta' },\n  { value: 'media', label: 'Média' },\n  { value: 'baixa', label: 'Baixa' }\n];\n\nexport const statusOptions = [\n  { value: 'aberto', label: 'Aberto' },\n  { value: 'em_andamento', label: 'Em andamento' },\n  { value: 'resolvido', label: 'Resolvido' },\n  { value: 'cancelado', label: 'Cancelado' }\n];\n\nexport const tecnicos = [\n  { value: 'joao', label: 'João' },\n  { value: 'ana', label: 'Ana' },\n  { value: 'maria', label: 'Maria' }\n];\n\nexport function filtrarTickets(tickets, filtros) {\n  const {\n    searchTerm,\n    filtroStatus,\n    filtroPrioridade,\n    filtroDataInicial,\n    filtroDataFinal,\n    filtroTecnico,\n  } = filtros;\n\n  return tickets.filter(ticket => {\n    const termo = searchTerm?.toLowerCase() || \"\";\n\n\n    const matchesSearch =\n      !termo ||\n      ticket.nome?.toLowerCase().includes(termo) ||\n      ticket.problema?.toLowerCase().includes(termo) ||\n      ticket.email?.toLowerCase().includes(termo);\n\n    const matchesStatus = filtroStatus ? ticket.status === filtroStatus.value : true;\n    const matchesPrioridade = filtroPrioridade ? ticket.prioridade === filtroPrioridade.value : true;\n    const matchesData =\n      (!filtroDataInicial || ticket.data >= filtroDataInicial) &&\n      (!filtroDataFinal || ticket.data <= filtroDataFinal);\n    const matchesTecnico = filtroTecnico ? ticket.tecnico === filtroTecnico.value : true;\n\n    return matchesSearch && matchesStatus && matchesPrioridade && matchesData && matchesTecnico;\n  });\n}\n\nexport function exportarCSV(tickets) {\n\n  const cabecalho = [\"Nome\", \"Email\", \"Problema\", \"Prioridade\", \"Status\", \"Técnico\", \"Data\"];\n  \n  const linhas = tickets.map(t => [\n    t.nome,\n    t.email || '',\n    t.problema,\n    t.prioridade,\n    t.status,\n    t.tecnico,\n    t.data?.toLocaleDateString?.() || ''\n  ]);\n\n  const csvContent = [\n    cabecalho.join(\",\"),\n    ...linhas.map(linha => linha.map(escapeCSV).join(\",\"))\n  ].join(\"\\n\");\n\n  const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n  saveAs(blob, 'tickets.csv');\n}\n\nfunction escapeCSV(valor) {\n  if (typeof valor === 'string' && (valor.includes(',') || valor.includes('\"') || valor.includes('\\n'))) {\n    return `\"${valor.replace(/\"/g, '\"\"')}\"`;\n  }\n  return valor ?? '';\n}\n"],"names":["CriarTicket","nome","setNome","useState","email","setEmail","problema","setProblema","prioridade","setPrioridade","status","setStatus","tecnico","setTecnico","dataCriacao","setDataCriacao","Date","navigate","useNavigate","useEffect","user","auth","currentUser","displayName","_jsxs","onSubmit","async","e","preventDefault","addDoc","collection","db","value","data","Timestamp","fromDate","alert","erro","console","error","log","className","children","_jsx","type","onChange","target","placeholder","required","readOnly","Select","options","prioridades","classNamePrefix","statusOptions","tecnicos","DatePicker","selected","dateFormat","placeholderText","label","filtrarTickets","tickets","filtros","searchTerm","filtroStatus","filtroPrioridade","filtroDataInicial","filtroDataFinal","filtroTecnico","filter","ticket","_ticket$nome","_ticket$problema","_ticket$email","termo","toLowerCase","matchesSearch","includes","matchesStatus","matchesPrioridade","matchesData","matchesTecnico","exportarCSV","linhas","map","t","_t$data","_t$data$toLocaleDateS","toLocaleDateString","call","csvContent","join","linha","escapeCSV","blob","Blob","saveAs","valor","replace"],"sourceRoot":""}